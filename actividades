#include <stdio.h>

 

struct Motor {

    int numeroCilindros;

    float capacidadLitros;

};

 

struct Llanta {

    int diametroPulgadas;

    char tipo[20];

};

 

struct Puerta {

    char tipoApertura[20];

    int electrica;

};

 

struct Auto {

    char marca[20];

    char modelo[20];

    struct Motor motor;

    struct Llanta llantaDelantera;

    struct Llanta llantaTrasera;

    struct Puerta puertaIzquierda;

    struct Puerta puertaDerecha;

};

 

int main() {
printf("tamaño de %d\n", sizeof(struct Llanta));
printf("tamaño de %d\n", sizeof(struct Auto));

printf("tamaño de %d\n", sizeof(struct Llanta)/4);
printf("tamaño de %d\n", sizeof(struct Llanta)/4);

    
   
printf("tamaño de %d\n", sizeof(struct Llanta)*8);
printf("tamaño de %d\n", sizeof(struct Auto)*8);
}



#include <stdio.h>

void intercambiar(int *a, int *b, int *c ) {
    int temp = *a;
    *a = *b;
    *b = temp;
}



int main()
{
    
    int num1 = 5;
    int num2 = 10;
    
    int num3[5] = {1, 2, 3, 4, 5};
    
    
    
    
    
    printf("Antes de intercambiar : num1 = %d, num2 = %d\n", num1, num2);
    
    intercambiar(&num1, &num2, &num3[0]);
    
    printf("Despues del intecambio: num1 = %d, num2 = %d", num1, num2);
    

    return 0;
}


#include <stdio.h> 

#define MAX_ESTUDIANTES 3
#define MAX_LONGITUD_NOMBRE 50

struct Estudiante
{
    int numero_registro;
    char nombre[MAX_LONGITUD_NOMBRE];
    char carrera[MAX_LONGITUD_NOMBRE];
    int edad;
};

int main()
{
    struct Estudiante estudiantes[MAX_ESTUDIANTES];

    for (int i = 0; i < MAX_ESTUDIANTES; i++)
    {
        printf("Estudiante #%d\n", i + 1);

        printf("Ingrese su numero de registro: \n");
        scanf("%d", &estudiantes[i].numero_registro);

        printf("Ingrese su nombre: \n");
        scanf(" %[^\n]s", estudiantes[i].nombre); 

        printf("Ingrese su carrera: \n");
        scanf("%s", estudiantes[i].carrera);

        printf("Ingrese su edad: \n");
        scanf("%d", &estudiantes[i].edad);
        printf("\n");
    }
    
    int *ptrEstudiante = &estudiante
    
    for (ptrEstudiante)

    return 0;
}



#include <stdio.h> 

#define MAX_ESTUDIANTES 3
#define MAX_LONGITUD_NOMBRE 50

struct Estudiante
{
    int numero_registro;
    char nombre[MAX_LONGITUD_NOMBRE];
    char carrera[MAX_LONGITUD_NOMBRE];
    int edad;
};

int main()
{
    struct Estudiante estudiantes[MAX_ESTUDIANTES];

    for (int i = 0; i < MAX_ESTUDIANTES; i++)
    {
        printf("Estudiante #%d\n", i + 1);

        printf("Ingrese su numero de registro: \n");
        scanf("%d", &estudiantes[i].numero_registro);

        printf("Ingrese su nombre: \n");
        scanf(" %[^\n]s", estudiantes[i].nombre); 

        printf("Ingrese su carrera: \n");
        scanf("%s", estudiantes[i].carrera);

        printf("Ingrese su edad: \n");
        scanf("%d", &estudiantes[i].edad);
        printf("\n");
    }
    
    int *ptrEstudiante = &estudiante
    
    for (ptrEstudiante)

    return 0;
}



#include <stdio.h>

int main()
{
    float calif[9] = {7,4, 9, 0, 8, 9.2, 7.7};
    float decimas[7] = {4, 5, 5, 2, 1, 3, 1};
    
    *puntero1 = calif;
    *puntero2 = decimas; 
    for (int i = 0; i < 7; i++) {
        decimas[i] /= 10.0;}
    
    float resultado[7];
    
    for (int i = 0; i < 7; i++)
    {
    
    resultado[i] = *puntero1+puntero2;
    resultado[i] = *puntero3;
    
    printf("Calificacionn %d es igual a %2f y su direccion es %p", i, *(puntero1+puntero2));
    
        
    }
    return 0;
}



{
    int arreglo[5] = {0, 2, 4, 6, 8};  // Added semicolon
    
    int *puntero = arreglo;
    
    for (int i = 0; i < 5; i++)
    {
        printf("elemento %d : %d con direccion %p \n", i, *puntero, &*puntero);  // Corrected the address print
        
        puntero++;
    }

    return 0;
}



#include <stdio.h>

int main()
{
    int numero = 42;
    int *ptrNumero = &numero;
    //imprimir el contenido de la variable
    printf("Contenido de la variable 'numero': %d \n", numero);
    
    //imprimir la direccioni de la variable
    printf("direccion de la variable 'numero' : %p \n", &numero);
    
    //imprimir el contenido del puntero
    printf("contenido del puntero 'ptrNumero': %p \n", ptrNumero);
    
    //imprimir el valor de la variable la que apunta el puntero
    printf("valor al que apunto 'ptrNumero': %d \n", *ptrNumero);
    
    //imprimir la direccion del puntero
    printf("direccion del puntero 'ptrNumero': %p \n", *&ptrNumero);
    
    
    

    return 0;
}


#include <stdio.h>

int main()
{
    float pi=3.1416;
    
    float *puntero= &pi;
    
    printf("valor: %f\n", *puntero);
    
    printf("valor: %p\n", puntero);
    
    printf("valor: %p\n", pi);
    
    printf("valor %f \n", pi);

    return 0;
}


#include <stdio.h>

int main()
{
    //definir una variable reinterpret_cas
    int numero=42;
    //definir un puntero a entero
    int *puntero= &numero;
    
    printf("valor de la variable: %d \n", *puntero);
     printf("valor de la variable: %d \n", puntero);
    //cam biar el valor a traves del puntero
    
    *puntero=99;
    
    printf("nuevo valor %d \n", numero);
    
    
    //reto 
    int a=10;
    int b=30;
    
    int *puntero1= &a;
    int *puntero2= &b;
    int resultado;
    
    printf("valor de la variable: %d \n", *puntero1);
    printf("valor de la variable: %d \n", *puntero2);
    
    resultado= *puntero1 + *puntero2;
    printf("resultado: %d \n", resultado);
    
    *puntero1=30;
    
    printf("nuevo valor %d y %d \n", a, b);
    
    
    

    return 0;
}



#include <stdio.h>
#include <time.h>
#include <stdlib.h>

void llenarArreglo(int arreglo[], int tamano) {
    printf("Ingrese los elementos del arreglo\n");
    for (int i = 0; i < tamano; i++) {
        printf("elemento %d: ", i);
        scanf("%d", &arreglo[i]);
        
        srand(time(NULL));
        arreglo[i] = rand () % 100;
       
    }
}

void imprimirArreglo(int arreglo[], int tamano) {
    printf("Arreglo:[");
    for (int i = 0; i < tamano; i++) {
        printf(" %d", arreglo[i]);
        if (i < tamano - 1) {
            printf(",");
        }
    }
    printf("]\n");
}

void ordenarBurbuja(int arreglo[], int tamano) {
    clock_t comienzo;
    
    comienzo = clock();
    for (int i = 0; i < tamano - 1; i++) {
        for (int j = 0; j < tamano - i - 1; j++) {
            if (arreglo[j] > arreglo[j + 1]) {
                int temp = arreglo[j];
                arreglo[j] = arreglo[j + 1];
                arreglo[j + 1] = temp;
            }
        }
    }
    
    printf("Numero de segundos transcurridos desde el comienzo del programa: %f s\n", (double)(clock() - comienzo) / CLOCKS_PER_SEC);
}




    

int main() {
    int tamano;

    printf("Ingrese el tamaño del arreglo: ");
    scanf("%d", &tamano);

    int arreglo[tamano];

    llenarArreglo(arreglo, tamano);

    printf("Arreglo original: ");
    imprimirArreglo(arreglo, tamano);

    ordenarBurbuja(arreglo, tamano);

    printf("Arreglo ordenado: ");
    imprimirArreglo(arreglo, tamano);

    return 0;
}
